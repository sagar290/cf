name: Build Go Binary for All Platforms

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    name: Build & Package
    runs-on: ubuntu-latest

    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
        exclude:
          - goos: darwin
            goarch: arm64 # Optional: comment this out if you want macOS ARM support

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Build binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          mkdir -p dist
          BINARY_NAME=cf-${{ matrix.goos }}-${{ matrix.goarch }}
          if [ "${{ matrix.goos }}" = "windows" ]; then
            BINARY_NAME="${BINARY_NAME}.exe"
          fi
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o dist/${BINARY_NAME} main.go

      - name: Zip binary
        run: |
          cd dist
          BINARY_NAME=cf-${{ matrix.goos }}-${{ matrix.goarch }}
          if [ "${{ matrix.goos }}" = "windows" ]; then
            BINARY_NAME="${BINARY_NAME}.exe"
          fi
          zip ${BINARY_NAME}.zip ${BINARY_NAME}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: cf-${{ matrix.goos }}-${{ matrix.goarch }}
          path: dist/cf-${{ matrix.goos }}-${{ matrix.goarch }}.zip
  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Flatten structure
        run: |
          mkdir flat
          find dist -type f -exec cp {} flat/ \;

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}
          files: flat/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}